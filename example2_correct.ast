(program
  ((protoDec
     primes
     ()
     ()
     ((funProto
        divides
        ()
        ((formal (int) d) (formal (int) n))
        (bool))
      (funProto isPrime () ((formal (int) n)) (bool)))))
  ((classDec
     prime
     ()
     ((typeApp primes ()))
     (init () (block () ()))
     ((funDec
        divides
        ()
        ((formal (int) d) (formal (int) n))
        (bool)
        (block ((varDec (int) q (binOpn / n d))
                (varDec (int) r (binOpn - n (binOpn * q d))))
               ((return (binOpn = r (intLiteral 0))))))
      (funDec
        isPrime
        ()
        ((formal (int) n))
        (bool)
        (block ()
               ((expStm (call printInt (n)))
                (expStm (call printLine ()))
                (if (binOpn < n (intLiteral 2))
                    (return (false))
                    (if (binOpn = n (intLiteral 2))
                        (return (true))
                        (block ((varDec (int) d (intLiteral 3)))
                               ((while (binOpn < d n)
                                       (block ()
                                              ((if (call divides (d n))
                                                   (return (false))
                                                   (expStm
                                                     (assign
                                                       d
                                                       (binOpn
                                                         +
                                                         d
                                                         (intLiteral 2))))))))
                                (return (true)))))))))
      (funDec
        expressions
        ()
        ()
        (void)
        (block ((varDec
                  (bool)
                  b
                  (binOpn or (true) (binOpn or (false) (true))))
                (varDec
                  (int)
                  n
                  (binOpn
                    -
                    (binOpn
                      +
                      (binOpn
                        *
                        (binOpn * (intLiteral 3) (intLiteral 4))
                        (intLiteral 5))
                      (intLiteral 6))
                    (binOpn / (intLiteral 7) (intLiteral 8))))
                (varDec (float) x n))
               ((expStm
                  (assign
                    b
                    (binOpn
                      and
                      b
                      (binOpn and (true) (binOpn and (false) b)))))
                (expStm
                  (assign
                    b
                    (binOpn
                      and
                      b
                      (binOpn and (binOpn < n (intLiteral 14)) b))))
                (expStm (null))
                (expStm
                  (binOpn
                    or
                    (call (dot (newObject prime ()) isPrime)
                          ((intLiteral 13)))
                    (binOpn
                      or
                      (binOpn and b b)
                      (binOpn < x (floatLiteral 3.4)))))
                (expStm
                  (aref (newArray
                          (arrayOf (arrayOf (arrayOf (int))))
                          (intLiteral 45))
                        n))
                (expStm
                  (binOpn
                    or
                    (call (lambda ((formal (int) a) (formal (int) b))
                            (bool)
                            (block () ((return (binOpn < a b)))))
                          ((intLiteral 3) (intLiteral 4)))
                    (true)))
                (expStm
                  (call (lambda ((formal (float) x)
                                 (formal (float) y)
                                 (formal (float) z))
                          (void)
                          (block () ((expStm (binOpn + (binOpn + x y) z)))))
                        (x x x)))
                (expStm
                  (call (lambda ((formal (float) x))
                          (void)
                          (block ()
                                 ((expStm (binOpn + (binOpn + x x) x))
                                  (return0))))
                        ((floatLiteral 3.7))))
                (expStm (charLiteral #\a))
                (expStm (stringLiteral "abc"))
                (expStm (intLiteral 13))
                (expStm (floatLiteral 25.0))
                (expStm (binOpn = n (intLiteral 3)))
                (expStm (binOpn != n (intLiteral 3)))
                (expStm (binOpn < n (intLiteral 3)))
                (expStm (binOpn <= n (intLiteral 3)))
                (expStm (binOpn > n (intLiteral 3)))
                (expStm (binOpn >= n (intLiteral 3)))
                (expStm (unOpn ! (binOpn > n (intLiteral 3))))
                (expStm
                  (binOpn
                    -
                    (binOpn
                      -
                      (binOpn + n (unOpn - (intLiteral 4)))
                      (intLiteral 5))
                    (unOpn - (intLiteral 6))))))))))
  (block ((varDec
            (typeApp primes ())
            c
            (newObject prime ())))
         ((expStm
            (call printBool
                  ((call (dot c isPrime) ((call readInt ()))))))
          (expStm (call printLine ())))))
